// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v3.12.4
// source: uziprocessed.proto

package uziprocessed

import (
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MriProcessed struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	Nodes         []*MriProcessed_Node    `protobuf:"bytes,100,rep,name=nodes,proto3" json:"nodes,omitempty"`
	Segments      []*MriProcessed_Segment `protobuf:"bytes,200,rep,name=segments,proto3" json:"segments,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MriProcessed) Reset() {
	*x = MriProcessed{}
	mi := &file_uziprocessed_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MriProcessed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MriProcessed) ProtoMessage() {}

func (x *MriProcessed) ProtoReflect() protoreflect.Message {
	mi := &file_uziprocessed_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MriProcessed.ProtoReflect.Descriptor instead.
func (*MriProcessed) Descriptor() ([]byte, []int) {
	return file_uziprocessed_proto_rawDescGZIP(), []int{0}
}

func (x *MriProcessed) GetNodes() []*MriProcessed_Node {
	if x != nil {
		return x.Nodes
	}
	return nil
}

func (x *MriProcessed) GetSegments() []*MriProcessed_Segment {
	if x != nil {
		return x.Segments
	}
	return nil
}

type MriProcessed_Node struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,100,opt,name=id,proto3" json:"id,omitempty"`
	MriId         string                 `protobuf:"bytes,200,opt,name=mri_id,json=mriId,proto3" json:"mri_id,omitempty"`
	Knosp_012     float64                `protobuf:"fixed64,400,opt,name=knosp_012,json=knosp012,proto3" json:"knosp_012,omitempty"`
	Knosp_3       float64                `protobuf:"fixed64,500,opt,name=knosp_3,json=knosp3,proto3" json:"knosp_3,omitempty"`
	Knosp_4       float64                `protobuf:"fixed64,600,opt,name=knosp_4,json=knosp4,proto3" json:"knosp_4,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MriProcessed_Node) Reset() {
	*x = MriProcessed_Node{}
	mi := &file_uziprocessed_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MriProcessed_Node) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MriProcessed_Node) ProtoMessage() {}

func (x *MriProcessed_Node) ProtoReflect() protoreflect.Message {
	mi := &file_uziprocessed_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MriProcessed_Node.ProtoReflect.Descriptor instead.
func (*MriProcessed_Node) Descriptor() ([]byte, []int) {
	return file_uziprocessed_proto_rawDescGZIP(), []int{0, 0}
}

func (x *MriProcessed_Node) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *MriProcessed_Node) GetMriId() string {
	if x != nil {
		return x.MriId
	}
	return ""
}

func (x *MriProcessed_Node) GetKnosp_012() float64 {
	if x != nil {
		return x.Knosp_012
	}
	return 0
}

func (x *MriProcessed_Node) GetKnosp_3() float64 {
	if x != nil {
		return x.Knosp_3
	}
	return 0
}

func (x *MriProcessed_Node) GetKnosp_4() float64 {
	if x != nil {
		return x.Knosp_4
	}
	return 0
}

type MriProcessed_Segment struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,100,opt,name=id,proto3" json:"id,omitempty"`
	NodeId        string                 `protobuf:"bytes,200,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	ImageId       string                 `protobuf:"bytes,300,opt,name=image_id,json=imageId,proto3" json:"image_id,omitempty"`
	Contor        string                 `protobuf:"bytes,400,opt,name=contor,proto3" json:"contor,omitempty"`
	Knosp_012     float64                `protobuf:"fixed64,500,opt,name=knosp_012,json=knosp012,proto3" json:"knosp_012,omitempty"`
	Knosp_3       float64                `protobuf:"fixed64,600,opt,name=knosp_3,json=knosp3,proto3" json:"knosp_3,omitempty"`
	Knosp_4       float64                `protobuf:"fixed64,700,opt,name=knosp_4,json=knosp4,proto3" json:"knosp_4,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MriProcessed_Segment) Reset() {
	*x = MriProcessed_Segment{}
	mi := &file_uziprocessed_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MriProcessed_Segment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MriProcessed_Segment) ProtoMessage() {}

func (x *MriProcessed_Segment) ProtoReflect() protoreflect.Message {
	mi := &file_uziprocessed_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MriProcessed_Segment.ProtoReflect.Descriptor instead.
func (*MriProcessed_Segment) Descriptor() ([]byte, []int) {
	return file_uziprocessed_proto_rawDescGZIP(), []int{0, 1}
}

func (x *MriProcessed_Segment) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *MriProcessed_Segment) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *MriProcessed_Segment) GetImageId() string {
	if x != nil {
		return x.ImageId
	}
	return ""
}

func (x *MriProcessed_Segment) GetContor() string {
	if x != nil {
		return x.Contor
	}
	return ""
}

func (x *MriProcessed_Segment) GetKnosp_012() float64 {
	if x != nil {
		return x.Knosp_012
	}
	return 0
}

func (x *MriProcessed_Segment) GetKnosp_3() float64 {
	if x != nil {
		return x.Knosp_3
	}
	return 0
}

func (x *MriProcessed_Segment) GetKnosp_4() float64 {
	if x != nil {
		return x.Knosp_4
	}
	return 0
}

var File_uziprocessed_proto protoreflect.FileDescriptor

var file_uziprocessed_proto_rawDesc = string([]byte{
	0x0a, 0x12, 0x75, 0x7a, 0x69, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xac, 0x03, 0x0a, 0x0c, 0x4d, 0x72, 0x69, 0x50, 0x72, 0x6f, 0x63,
	0x65, 0x73, 0x73, 0x65, 0x64, 0x12, 0x28, 0x0a, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x64,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x4d, 0x72, 0x69, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73,
	0x73, 0x65, 0x64, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x12,
	0x32, 0x0a, 0x08, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0xc8, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x4d, 0x72, 0x69, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65,
	0x64, 0x2e, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x08, 0x73, 0x65, 0x67, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x1a, 0x80, 0x01, 0x0a, 0x04, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x64, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x6d, 0x72, 0x69, 0x5f, 0x69, 0x64, 0x18, 0xc8, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d,
	0x72, 0x69, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x6b, 0x6e, 0x6f, 0x73, 0x70, 0x5f, 0x30, 0x31,
	0x32, 0x18, 0x90, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x6b, 0x6e, 0x6f, 0x73, 0x70, 0x30,
	0x31, 0x32, 0x12, 0x18, 0x0a, 0x07, 0x6b, 0x6e, 0x6f, 0x73, 0x70, 0x5f, 0x33, 0x18, 0xf4, 0x03,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x6b, 0x6e, 0x6f, 0x73, 0x70, 0x33, 0x12, 0x18, 0x0a, 0x07,
	0x6b, 0x6e, 0x6f, 0x73, 0x70, 0x5f, 0x34, 0x18, 0xd8, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06,
	0x6b, 0x6e, 0x6f, 0x73, 0x70, 0x34, 0x1a, 0xba, 0x01, 0x0a, 0x07, 0x53, 0x65, 0x67, 0x6d, 0x65,
	0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x64, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0xc8, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0xac, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x74,
	0x6f, 0x72, 0x18, 0x90, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x74, 0x6f,
	0x72, 0x12, 0x1c, 0x0a, 0x09, 0x6b, 0x6e, 0x6f, 0x73, 0x70, 0x5f, 0x30, 0x31, 0x32, 0x18, 0xf4,
	0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x6b, 0x6e, 0x6f, 0x73, 0x70, 0x30, 0x31, 0x32, 0x12,
	0x18, 0x0a, 0x07, 0x6b, 0x6e, 0x6f, 0x73, 0x70, 0x5f, 0x33, 0x18, 0xd8, 0x04, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x06, 0x6b, 0x6e, 0x6f, 0x73, 0x70, 0x33, 0x12, 0x18, 0x0a, 0x07, 0x6b, 0x6e, 0x6f,
	0x73, 0x70, 0x5f, 0x34, 0x18, 0xbc, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x6b, 0x6e, 0x6f,
	0x73, 0x70, 0x34, 0x42, 0x30, 0x5a, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f,
	0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2f, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72,
	0x2f, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x2f, 0x75, 0x7a, 0x69, 0x70, 0x72, 0x6f, 0x63,
	0x65, 0x73, 0x73, 0x65, 0x64, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_uziprocessed_proto_rawDescOnce sync.Once
	file_uziprocessed_proto_rawDescData []byte
)

func file_uziprocessed_proto_rawDescGZIP() []byte {
	file_uziprocessed_proto_rawDescOnce.Do(func() {
		file_uziprocessed_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_uziprocessed_proto_rawDesc), len(file_uziprocessed_proto_rawDesc)))
	})
	return file_uziprocessed_proto_rawDescData
}

var file_uziprocessed_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_uziprocessed_proto_goTypes = []any{
	(*MriProcessed)(nil),         // 0: MriProcessed
	(*MriProcessed_Node)(nil),    // 1: MriProcessed.Node
	(*MriProcessed_Segment)(nil), // 2: MriProcessed.Segment
}
var file_uziprocessed_proto_depIdxs = []int32{
	1, // 0: MriProcessed.nodes:type_name -> MriProcessed.Node
	2, // 1: MriProcessed.segments:type_name -> MriProcessed.Segment
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_uziprocessed_proto_init() }
func file_uziprocessed_proto_init() {
	if File_uziprocessed_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_uziprocessed_proto_rawDesc), len(file_uziprocessed_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_uziprocessed_proto_goTypes,
		DependencyIndexes: file_uziprocessed_proto_depIdxs,
		MessageInfos:      file_uziprocessed_proto_msgTypes,
	}.Build()
	File_uziprocessed_proto = out.File
	file_uziprocessed_proto_goTypes = nil
	file_uziprocessed_proto_depIdxs = nil
}
